#include "stm32f4xx.h"
#include "stm32f4_discovery.h"

extern uint32_t SystemCoreClock; // burada system core clock ayarlamasýnýn yapýldýðý deðiþkeni çaðýrýyoruz.

uint32_t  systemClock;

void RCC_Config(void){
	RCC->CR &= ~(1<<0);
	RCC->CR |= 1 << 16;
	while(!(RCC->CR & 1<<17));
	RCC->CR |= 1 << 19;
	// PLL ayarlamalarýnýn yapýlmasý ile uðraþýyoruz.
//	RCC->PLLCFGR &= ~(1<<0); // PLLM0 0 div : 4
//	RCC->PLLCFGR &= ~(1<<1); // PLLM1 0 div : 4
//	RCC->PLLCFGR |= ~(1<<2); // PLLM2 1 div : 4
//	RCC->PLLCFGR &= ~(1<<3); // PLLM3 0 div : 4
//	RCC->PLLCFGR &= ~(1<<4); // PLLM4 0 div : 4
//	RCC->PLLCFGR &= ~(1<<5); // PLLM5 0 div : 4
	// daha kolay bir yol ile pll_m deðerini ayarlama
	//RCC->PLLCFGR &= ~(31<<1); // ilk 5 biti 1 yap sonra tersini alýp sýfýrlama
	// bit kýsýmlarýný teker teker sýfýrlamaktansa bütün 32 bitlik kýsmý sýfýrlama iþlemi yapýlarak devam edilir
	RCC->PLLCFGR = 0x00000000; // buradaki 8 adet sýfýr 32 bit'i temsil eder çünkü her basamak 4 bitlik alaný temsil ediyor
	RCC->PLLCFGR = (1<<22);
	RCC->PLLCFGR |= (4<<0);
	RCC->PLLCFGR |= (168<<6);

	// configuring pll_p bits
	RCC->PLLCFGR &= ~(1<<16);
	RCC->PLLCFGR &= ~(1<<17);


}

int main(void)
{
	systemClock = SystemCoreClock;
	RCC_DeInit(); // HSIEN PLL OFF
	SystemCoreClockUpdate(); // 16 000 000
	systemClock = SystemCoreClock;
	RCC_Config();
  while (1)
  {

  }
}


void EVAL_AUDIO_TransferComplete_CallBack(uint32_t pBuffer, uint32_t Size){
  /* TODO, implement your code here */
  return;
}

uint16_t EVAL_AUDIO_GetSampleCallBack(void){
  /* TODO, implement your code here */
  return -1;
}
